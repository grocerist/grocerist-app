{% set leaflet_css = True %}
{% extends "templates/partials/base.j2" %}

{% block content %}
<div class="container subpage">
    <h1 class="text-center">
        {% with parent_page = "goods" %}
        {% include "templates/partials/link_to_top.j2" %}
        {% endwith %}
        {{ object.name }}
    </h1>
    <div class="row">
        <div class="col">
            {% if object.english_names or object.spelling_variations_and_synonyms %}
            <h3><i class="bi bi-journal-text" aria-hidden="true"></i> Vocabulary details</h3>
            <dl class="ms-4">
                {% if object.english_names %}
                <dt>Translation</dt>
                <dd class="ms-2">{{ object.english_names }}</dd>
                {% endif %}
                {% if object.spelling_variations_and_synonyms %}
                <dt>Spelling variations and synonyms</dt>
                {% for variation in object.spelling_variations_and_synonyms.split(',') %}
                <dd class="ms-2">{{ variation.strip() }}</dd>
                {% endfor %}
                {% endif %}
            </dl>
            {% endif %}

            {% if object.notes %}
            <h2><i class="bi bi-info-circle" aria-hidden="true"></i> Description</h2>
            <p class="ms-4">{{ object.notes }}</p>
            {% endif %}

            {% if object.has_category%}
            <h2><i class="bi bi-boxes" aria-hidden="true"></i> Categories</h2>
            <ul>
                {% for x in object.has_category %}
                <li><a href="category__{{ x.id }}.html">{{ x.value }}</a></li>
                {% endfor %}
            </ul>
            {% endif %}

            {% if object.documents%}
            <h2><i class="bi bi-archive" aria-hidden="true"></i> Documents</h2>
            <ul>
                {% for x in object.documents %}
                <li><a href="document__{{ x.id }}.html">{{ x.value }}</a></li>
                {% endfor %}
            </ul>
            {% endif %}

{% if object.price_per_document %}
    <h2><i class="bi bi-cash-stack" aria-hidden="true"></i> Price Information</h2>

    <table class="table">
        <thead>
            <tr>
                <th>Price</th>
                <th>Unit</th>
                <th>Amount</th>
                <th>Total Value</th>
            </tr>
        </thead>
        <tbody>
            {% for entry in object.price_per_document %}
                <tr>
                    <td>{{ entry.price if entry.price else "N/A" }}</td>
                    <td>{{ entry.unit.value if entry.unit else "N/A" }}</td>
                    <td>{{ entry.amount_of_units if entry.amount_of_units else "N/A" }}</td>
                    <td>{{ entry.total_value if entry.total_value else "N/A" }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
{% endif %}
        </div>

        <div class="col">
            <h2><i class="bi bi-map" aria-hidden="true"></i> Map</h2>
            <div id="map" style="height: 600px;" />
        </div>
    </div>
</div>
{% endblock content %}
{% block scripts2 %}
{% if object.documents %}
{% include "templates/partials/leaflet.j2" %}
<script>
    const icon = "bi bi-basket3-fill"

    // tojson filter is used to keep the data in json format
    // e.g. preventing the null values from being converted to None during processing
    const doc_list = {{ object.documents | tojson | safe }};

    const { map, layerGroups } = createMap({ layerControl: true });

    // create markers for each document
    for (let i = 0; i < doc_list.length; i++) {
        const doc = doc_list[i];
        const year = getYearFromISODate(doc.iso_date);
        if (doc.lat && doc.long) {
            const yearText = year ? `in ${year}` : '';
            const markerData = {
                lat: doc.lat,
                long: doc.long,
                year: year,
                popupContent: `<p>Mentioned in document <br>
            <strong><a href="document__${doc.id}.html">${doc.value}</a></strong><br>
            ${yearText}</p>`,
                icon: icon,
            };
            const { marker, layerName } = createMarker(markerData, true);
            marker.addTo(layerGroups[layerName]);
        }
    }
</script>
{% endif %}
{% endblock scripts2 %}